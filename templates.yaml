# Sensibo
- sensor:
    - name: Sensibo Humidity
      state: "{{ state_attr('climate.ofir_a_c', 'current_humidity') }}"
      unit_of_measurement: "%"
      icon: mdi:water-percent

- sensor:
    - name: Sensibo Tempature
      state: "{{ state_attr('climate.ofir_a_c', 'current_temperature') }}"
      unit_of_measurement: "°C"
      icon: mdi:thermometer
# Counters
- sensor:
    - name: tvscounter
      state: >-
        {% set group = expand('group.tvs') %}
        {{ group | count }}/{{ group | selectattr('state','eq','On') | list | count }}
- sensor:
    - name: camerascounter
      state: >-
        {% set group = expand('group.cameras') %}
        {{ group | count }}/{{ group | list | count }}
- sensor:
    - name: lightscounter
      state: >-
        {% set group = expand('group.lights') %}
        {{ group | count }}/{{ group | selectattr('state','eq','on') | list | count }}
- sensor:
    - name: rf433counter
      state: >-
        {% set group = expand('group.rf433') %}
        {{ group | count }}/{{ group | list | count }}
- sensor:
    - name: tempcounter
      state: >-
        {% set group = expand('group.temp') %}
        {{ group | count }}/{{ group | list | count }}

# Online States
- sensor:
    - name: Zigbee Online
      state: >
        {{ iif(is_state('binary_sensor.zigbee2mqtt_running', 'on'), 'Online', 'Offline') }}
      availability: >
        {{ states('binary_sensor.zigbee2mqtt_running') not in ['unavailable', 'unknown'] }}
    - name: MQTT Online
      state: >
        {{ iif(is_state('binary_sensor.mosquitto_broker_running', 'on'), 'Online', 'Offline') }}
      availability: >
        {{ states('binary_sensor.mosquitto_broker_running') not in ['unavailable', 'unknown'] }}
    - name: Uptime Kuma Online
      state: >
        {{ iif(is_state('binary_sensor.uptime_kuma_running', 'on'), 'Online', 'Offline') }}
      availability: >
        {{ states('binary_sensor.uptime_kuma_running') not in ['unavailable', 'unknown'] }}
    - name: Google Drive Online
      state: >
        {{ iif(is_state('binary_sensor.home_assistant_google_drive_backup_running', 'on'), 'Online', 'Offline') }}
      availability: >
        {{ states('binary_sensor.home_assistant_google_drive_backup_running') not in ['unavailable', 'unknown'] }}
    - name: Plex Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_plex', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_plex') not in ['unavailable', 'unknown'] }}
    - name: Tautulli Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_tautulli', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_tautulli') not in ['unavailable', 'unknown'] }}
    - name: Ubuntu Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_home_assistant_main', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_home_assistant_main') not in ['unavailable', 'unknown'] }}
    - name: qBitTorrent Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_qbittorrent', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_qbittorrent') not in ['unavailable', 'unknown'] }}
    - name: Radarr Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_radarr', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_radarr') not in ['unavailable', 'unknown'] }}
    - name: Sonarr Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_sonarr', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_sonarr') not in ['unavailable', 'unknown'] }}
    - name: Ombi Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_ombi', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_ombi') not in ['unavailable', 'unknown'] }}
    - name: Trakt Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_trakt', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_trakt') not in ['unavailable', 'unknown'] }}
    - name: Prowlarr Online
      state: >
        {{ iif(is_state('sensor.uptimekuma_prowlarr', 'up'), 'Online', 'Offline') }}
      availability: >
        {{ states('sensor.uptimekuma_prowlarr') not in ['unavailable', 'unknown'] }}

# Sidebar
- sensor:
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: >
          <font color='#6a7377'><b>
          {% if strptime(states('sensor.date'), '%Y-%m-%d').day != None %}
          {% set days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
          {% set months = ['January', 'February', 'March', 'April', 'May', 'June',
          'July', 'August', 'September', 'October', 'November', 'December'] %}
            {{ days[now().weekday()] }}<br>
            {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {% endif %}
          </b></font>
        greet: >
          <b>
          {% set time = now().hour %}
          {% if time <= 1 %} Good night {{'\U0001F611'}}
          {% elif time <= 3 %} Good night {{'\U0001F62A'}}
          {% elif time <= 5 %} Good night {{'\U0001F634'}}
          {% elif time <= 7 %} Good morning {{'\U0001F4A9'}}
          {% elif time <= 9 %} Good morning {{'\u2615\uFE0F'}}
          {% elif time <= 10 %} Good morning {{'\U0001F642'}}
          {% elif time <= 13 %} Good day {{'\U0001F60A'}}
          {% elif time <= 15 %} Good day {{'\U0001F60E'}}
          {% elif time <= 17 %} Good day {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 19 %} Good evening {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 22 %} Good evening {{'\U0001F60C'}}
          {% elif time <= 23 %} Good evening {{'\U0001F974'}}
          {% else %} Good evening {{'\U0001F974'}}
          {% endif %}
          </b>
        active: >
          <b>
          {% set lights = [
            states.light.living_room_light_module,
            states.light.office_desk_led_strip,
            states.light.switchbot_bedroom_light_switch,
            states.light.yeelink_color5_6079_light_2,
            states.switch.bot_8552,
            states.switch.kitchen_light_switch,
            states.switch.office_light
          ] %}

          {% set devices = [
            states.input_select.office_tv_status,
            states.input_select.bedroom_ac_status,
            states.input_select.bedroom_tv_status,
            states.input_select.living_room_tv_status,
            states.switch.switcher_v4_yair_stern,
            states.input_select.washing_machine_status,
            states.climate.ofir_a_c,
            states.vacuum.mijia_v2_202f_robot_cleaner,
            states.sensor.ofir_pc_lastactive
          ] %}

          {% set lights_on = lights | selectattr('state','eq','on') | list %}
          {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {% set devices_on = devices | selectattr('state','search','(on|cool|heat|playing|On|cleaning)') | list %}
          {% set devices_name = devices_on | map(attribute='name') | join(', ') %}

          {% if (lights_on | length == 0) and (devices_on | length > 0) %}
            {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} is on

          {% elif (lights_on | length == 1) and (devices_on | length == 1) %}
            {{ lights_name }} and {{devices_name }} is on

          {% elif (lights_on | length == 1) and (devices_on | length > 1) %}
            {{ lights_name }}, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length > 1) and (devices_on | length == 1) %}
            {{ lights_on | length }} lamps and {{ devices_name }} are on

          {% elif (lights_on | length > 1) and (devices_on | length > 1) %}
            {{ lights_on | length }} lamps, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length == 1) and (devices_on | length == 0) %}
            {{ lights_name }} are on

          {% elif (lights_on | length > 1) and (devices_on | length == 0) %}
            {{ lights_on | length }} lamps are on

          {% else %}
            <font color='#6a7377'>Everything is turned off</font>
          {% endif %}
          </b>
        vacuum: >
          {% set entity_id = 'vacuum.mijia_v2_202f_robot_cleaner' %}
          {% if is_state(entity_id, 'cleaning') %}
            <b>Xiaomi Robot is cleaning</b>
          {% elif is_state(entity_id, 'returning') %}
            <b>Xiaomi Robot is done</b>
          {% endif %}
        weather: >
          {% set entity = 'weather.accuweather' %}
          {% set temp = state_attr(entity, 'temperature') | round(default='na') %}
          {{ ('Today temperature is ' ~ temp  ~ '°')  if temp | is_number else 'Cannot load weather...' }}

        battery: >
          {% set entities = states.sensor 
            | selectattr('entity_id', 'search', 'battery', 'battery_level')
            | rejectattr('entity_id', 'search', 'iphone')
            | map(attribute = 'entity_id') | list %}
          {% for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
            {% if loop.first %} {{'\u26A0\uFE0F'}} Battery {% else %}, {% endif %}
            {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          {% endfor %}
