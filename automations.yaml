- id: '1672140546661'
  alias: GitHub Push
  description: Everyday in 4AM will update the github.
  trigger:
  - platform: time
    at: 04:00:00
  condition: []
  action:
  - service: shell_command.pushupdates_to_github
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - GitHub Push"
  mode: single
- id: '1672416137952'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      time: '19:00:00'
      exclude:
        entity_id:
        - sensor.elians_iphone_battery_level
        - sensor.ofir_honor_magic_5_pro_battery_level
      actions:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - {{sensors}} has low on battery, please
            replace it."
- id: '1672558313040'
  alias: Laundry Machine has started
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 0
      seconds: 12
    above: 10
  condition:
  - condition: state
    entity_id: input_select.washing_machine_status
    state: 'Off'
  action:
  - service: input_select.select_option
    data:
      option: 'On'
    target:
      entity_id: input_select.washing_machine_status
  - service: notify.home_assistant_group
    data:
      message: "\U0001F456 Laundry machine has started!"
  mode: single
- id: '1672558877974'
  alias: Laundry machine has finished
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 5
  condition:
  - condition: state
    entity_id: input_select.washing_machine_status
    state: 'On'
  action:
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.washing_machine_status
  - service: notify.home_assistant_group
    data:
      message: "\U0001F456 Laundry machine has finished!"
  mode: single
- id: '1673469552878'
  alias: 'Helper: Set Bedroom AC Status to On'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ac_bedroom_power
    for:
      hours: 0
      minutes: 1
      seconds: 0
    above: 5
  - platform: state
    entity_id:
    - climate.bedroom_ac
    from: 'off'
    to: cool
  - platform: state
    entity_id:
    - climate.bedroom_ac
    from: 'off'
    to: heat
  condition:
  - condition: state
    entity_id: input_select.bedroom_ac_status
    state: 'Off'
  action:
  - service: input_select.select_option
    data:
      option: 'On'
    target:
      entity_id: input_select.bedroom_ac_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Bedroom AC ❄️ Status has been changed to On!"
  mode: single
- id: '1673469610479'
  alias: 'Helper: Set Bedroom AC Status to Off'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ac_bedroom_power
    for:
      hours: 0
      minutes: 4
      seconds: 47
    below: 4
  - platform: state
    entity_id:
    - climate.bedroom_ac
    to: 'off'
    from:
  condition:
  - condition: state
    entity_id: input_select.bedroom_ac_status
    state: 'On'
  action:
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.bedroom_ac_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Bedroom AC ❄️ Status has been changed to Off!"
  mode: single
- id: '1673808016982'
  alias: Bedroom A/C Bedroom OFF
  description: ''
  trigger:
  - platform: time
    at: 01:00:00
    id: 1:00 am
    alias: At 1:00 am
  - platform: state
    entity_id:
    - input_select.bedroom_ac_status
    to: 'On'
    id: Bedroom A/C turned on
    alias: Bedroom A/C turned on
  - platform: state
    entity_id:
    - input_select.bedroom_ac_status
    to: 'Off'
    id: Bedroom A/C turned off
    alias: Bedroom A/C turned off
  - platform: state
    entity_id:
    - timer.a_c_timer
    to: idle
    id: Timer Finished
    from: active
    alias: Bedroom A/C timer finished/canceled
  condition:
  - condition: time
    before: 05:30:00
    after: 01:00:00
    alias: Time between 1 am & 5 am
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 1:00 am
          alias: Triggered at 01:00 am
        - condition: trigger
          id: Bedroom A/C turned on
          alias: Triggered by Bedroom A/C turned on
        alias: Triggered by 1:00 am or Bedroom A/C turned on
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'On'
      sequence:
      - service: timer.start
        data:
          duration: 01:30:00
        alias: Start Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
    - conditions:
      - condition: trigger
        id: Bedroom A/C turned off
        alias: Bedroom A/C turned off
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'Off'
      sequence:
      - service: timer.cancel
        data: {}
        alias: Cancel Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
    - conditions:
      - condition: trigger
        id: Timer Finished
        alias: Bedroom A/C Timer Finished
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.bedroom_ac
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Bedroom A/C automation has closed the
            A/C!"
  mode: single
- id: '1675145318623'
  alias: New Item Added to Shopping List
  description: Notification to Telegram Group when new Item has been added to Shopping
    List.
  trigger:
  - platform: event
    event_type: shopping_list_updated
    event_data:
      action: add
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      message: "\U0001F6D2 {{ trigger.event.data.item.name }}\nhas been added to the
        shopping list.\n"
      data:
        clickAction: /shopping-list
        url: /shopping-list
  mode: single
- id: '1675577078929'
  alias: Supervisor - Main Door Open
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    from: 'off'
    to: 'on'
    id: door_open
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 45
  - service: camera.snapshot
    data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
    target:
      entity_id: camera.living_room_sub
  - service: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - Main Door is open now!"
  - choose:
    - conditions:
      - condition: time
        after: 00:00:00
        before: 06:00:00
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'Off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          area_id: hallway
      - delay:
          hours: 0
          minutes: 0
          seconds: 25
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          area_id: hallway
  mode: single
- id: '1675577121363'
  alias: Supervisor - Main Door Closed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    from: 'on'
    to: 'off'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Main Door is closed now!"
  mode: single
- id: '1675577446512'
  alias: Supervisor - Elian is Away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.elians_iphone
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 0
      seconds: 12
    id: elian_left_home
  - platform: device
    device_id: 611a494457823cb15ab854ae5b741ef0
    domain: device_tracker
    entity_id: 4d605a96e7d9ad764a8f357609e42ebd
    type: enters
    zone: zone.mofit
    id: elian_enter_mofit
  - platform: device
    device_id: 611a494457823cb15ab854ae5b741ef0
    domain: device_tracker
    entity_id: 4d605a96e7d9ad764a8f357609e42ebd
    type: leaves
    zone: zone.mofit
    id: elian_leaving_mofit
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Elian has left the house."
    enabled: false
  - choose:
    - conditions:
      - condition: trigger
        id:
        - elian_enter_mofit
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has entered Mofit."
    - conditions:
      - condition: trigger
        id:
        - elian_leaving_mofit
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left Mofit."
    - conditions:
      - condition: trigger
        id:
        - elian_left_home
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left the house."
  mode: single
- id: '1675577604748'
  alias: Supervisor - qBitTorrent is Offline
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.uptimekuma_qbittorrent
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - qBitTorrent is Offline!"
  mode: single
- id: '1675954097249'
  alias: Robot Vacuum Started Notification Telegram
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.mijia_v2_202f_robot_cleaner
    to: cleaning
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      message: "\U0001F9F9 Vacuum Robot has started!"
  mode: single
- id: '1675955302558'
  alias: Fish Fed Telegram Notification
  trigger:
  - platform: state
    entity_id: switch.hfjh_v2_eadb_fish_tank_2
    attribute: event.4.1
  condition:
  - alias: Check if the switch didn't go from or to unavailable
    condition: template
    value_template: '{{ not ''unavailable'' in [trigger.from_state.state, trigger.to_state.state]
      }}'
  - alias: Check if the values are correct
    condition: template
    value_template: '{{ not (values.value == ''unknown'' and values.timestamp == ''unknown'')
      }}'
  action:
  - service: camera.snapshot
    data:
      filename: /config/www/tmp/snapshot_aquarium_sub.jpg
    target:
      entity_id: camera.aquarium_sub
  - alias: Send the message
    service: notify.home_assistant_group
    data:
      message: "{% if values.error %}\n  \U0001F41F ❌ The fishes have not been fed
        at {{ values.timestamp }} ❌\n{% else %}\n  \U0001F41F The fishes have been
        fed {{ values.value }} portions at {{ values.timestamp }}.\n{% endif %}\n"
    enabled: false
  - service: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_aquarium_sub.jpg
      caption: "    {% if values.error %} \U0001F41F ❌ The fishes have not been fed
        at {{ values.timestamp }} ❌ {% else %} \U0001F41F The fishes have been fed
        {{ values.value }} portions at {{ values.timestamp }}. {% endif %}"
  variables:
    values: "{% if state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1') is not
      none %}\n  {% set value = (state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1')
      | from_json).value[0].value.split(',') %}\n  {% set timestamp = (state_attr('switch.hfjh_v2_eadb_fish_tank_2',
      'event.4.1') | from_json).timestamp %}\n{% endif %} {% set timestamp =  timestamp
      | default() | timestamp_custom('%H:%M %A', default='unknown') %} {% set value
      = (value | default())[6] | default('unknown') %} {% set error = (value | default())[5]
      | default() == 0 %} {{ dict(timestamp=timestamp,value=value,error=error) }}\n"
  mode: single
- id: '1675957403629'
  alias: Robot Vacuum Finished Notification Telegram
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.mijia_v2_202f_robot_cleaner
    to: returning
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      title: "\U0001F9F9 Vacuum Robot has finished and returning to base!"
      message: It took {{state_attr('vacuum.mijia_v2_202f_robot_cleaner', 'clean_record.clean_time')}}
        minutes and covered {{ states('sensor.vacuum_clean_area') }} m².
  mode: single
- id: '1676503252475'
  alias: Hallway Motion Light
  description: between 00:01 to 6:55 light will turn on for 2 minutes in the hallway
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dining_table_person
    to: 'on'
    id: Motion Detected on Dining Table by Person
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.dining_table_person
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 40
    enabled: true
  condition:
  - condition: time
    after: 00:00:00
    before: 06:52:00
  action:
  - if:
    - condition: trigger
      id: Motion Detected on Dining Table by Person
    - condition: time
      after: 00:01:00
      before: 06:52:00
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'Off'
    then:
    - condition: state
      entity_id: light.yeelink_color5_6079_light_2
      state: 'off'
    - service: light.turn_on
      data: {}
      target:
        device_id:
        - 16df7102b63d09b6fcc378186c583972
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Hallway Motion Light"
    else:
    - service: light.turn_off
      data:
        transition: 20
      target:
        device_id:
        - 16df7102b63d09b6fcc378186c583972
    enabled: true
  mode: single
- id: '1676677991115'
  alias: Notify with camera snapshot when motion is detected and both of you are not
    home
  description: When Elian & Ofir are not home and motion detected person
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: state
    entity_id:
    - binary_sensor.living_room_right_window_contact
    - binary_sensor.living_room_left_window_contact
    - binary_sensor.main_door_sensor_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: device
      device_id: 3991a8dcff5132448a99a281daf3577d
      domain: device_tracker
      entity_id: ee5300687733e0be5478ba30e2f369e0
      type: is_not_home
    - condition: device
      device_id: 611a494457823cb15ab854ae5b741ef0
      domain: device_tracker
      entity_id: device_tracker.elians_iphone
      type: is_not_home
  - condition: state
    entity_id: input_select.living_room_tv_status
    state: 'Off'
  action:
  - service: camera.snapshot
    data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
    target:
      entity_id: camera.living_room_sub
  - service: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - Notify with camera snapshot when motion is
        detected!"
  mode: single
- id: '1677017796757'
  alias: Blink Red Light Office
  description: When Ofir is home and Main Door open or Elian enters Home area.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    to: 'on'
  - platform: state
    entity_id:
    - device_tracker.elians_iphone
    from: not_home
    to: home
    id: elian_home_area
  condition:
  - condition: device
    device_id: 3991a8dcff5132448a99a281daf3577d
    domain: device_tracker
    entity_id: ee5300687733e0be5478ba30e2f369e0
    type: is_home
  - condition: time
    after: '16:15:00'
    before: 01:30:00
  - alias: Confirm someone is Presence at Office
    condition: state
    entity_id: binary_sensor.office_presence_sensor_presence
    state: 'on'
    enabled: true
  action:
  - service: scene.create
    data:
      scene_id: thebeforetimes
      snapshot_entities:
      - light.office_desk_led_strip
      - light.office_wall_light
  - repeat:
      count: '70'
      sequence:
      - service: light.toggle
        data:
          color_name: red
        target:
          entity_id: light.office_desk_led_strip
          device_id: fda8e5d95506b514038003c8f369a4df
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 250
  - service: scene.turn_on
    target:
      entity_id: scene.thebeforetimes
    metadata: {}
  - if:
    - condition: trigger
      id:
      - elian_home_area
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Elian enters Home Zone - Flash Red Color"
    else:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Main Door Open Flash Red Color"
  mode: single
- id: '1678080669448'
  alias: 'Helper: Set Bedroom TV Status to On'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.tv_bedroom_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    above: 5
  condition:
  - condition: state
    entity_id: input_select.bedroom_tv_status
    state: 'Off'
  action:
  - service: input_select.select_option
    data:
      option: 'On'
    target:
      entity_id: input_select.bedroom_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
        to On!"
  mode: single
- id: '1678080898486'
  alias: 'Helper: Set Bedroom TV Status to Off'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.tv_bedroom_power
    for:
      hours: 0
      minutes: 4
      seconds: 45
    below: 4
  condition:
  - condition: state
    entity_id: input_select.bedroom_tv_status
    state: 'On'
  action:
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.bedroom_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
        to Off!"
  mode: single
- id: '1678624466464'
  alias: Feeding is Required
  description: ''
  trigger:
  - platform: time
    at: sensor.feed_is_missing_timestamp
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      message: "\U0001F41F ❌ The fishes have not been fed for more than 2 days!"
  mode: single
- id: '1680267194597'
  alias: 'Helper: Set Office TV Status to On'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    above: 12
  condition:
  - condition: state
    entity_id: input_select.office_tv_status
    state: 'Off'
  action:
  - service: input_select.select_option
    data:
      option: 'On'
    target:
      entity_id: input_select.office_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
        to On!"
  mode: single
- id: '1680267264459'
  alias: 'Helper: Set Office TV Status to Off'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 39
    below: 11
  condition:
  - condition: state
    entity_id: input_select.office_tv_status
    state: 'On'
  action:
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.office_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
        to Off!"
  mode: single
- id: '1680274781889'
  alias: 'Helper: Set Living Room TV Status to On'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    above: 5
  condition:
  - condition: state
    state: 'Off'
    entity_id: input_select.living_room_tv_status
  action:
  - service: input_select.select_option
    data:
      option: 'On'
    target:
      entity_id: input_select.living_room_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
        changed to On!"
  mode: single
- id: '1680274832575'
  alias: 'Helper: Set Living Room TV Status to Off'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 45
    below: 4
  condition:
  - condition: state
    state: 'On'
    entity_id: input_select.living_room_tv_status
  action:
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.living_room_tv_status
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
        changed to Off!"
  mode: single
- id: '1683641424442'
  alias: Bedroom Sticker Button
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_sticker_switch_button_action
    to: single
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'Off'
      sequence:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.bedroom_ac
    - conditions:
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'On'
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.bedroom_ac
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Bedroom AC Switch Sticker Button"
  mode: single
- id: '1687162895738'
  alias: Turn off devices except Bedroom TV & AC
  description: Turning off all household devices like TVs and Lights, except Bedroom
    TV and Air Conditioner.
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_sticker_switch_button_action
    to: hold
  condition: []
  action:
  - service: switch.turn_off
    continue_on_error: true
    data: {}
    target:
      device_id:
      - 8b0b37e639c674161245a6a30534f8e5
      - 974fe480eea5ad9851e2b94d16cb3baa
      - e42ad30ecad8a8a8efdbd7e8c1f1b37f
  - service: light.turn_off
    continue_on_error: true
    data: {}
    target:
      area_id:
      - hallway
      - living_room
      - bedroom
  - repeat:
      while:
      - condition: template
        value_template: '{{ is_state(''input_select.living_room_tv_status'', ''On'')
          or is_state(''input_select.office_tv_status'', ''On'') }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.bedroom_tv_status
            state: 'On'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/Bedroom Smart IR Remote Control/set
              payload: '{"ir_code_to_send": "BaIjxREpAkABB4QCKQK6BikCQAfgBwFAF0ADQAFAB+AHA0ABwDdAG+AHAUATwANAAcALwAcJTJ6iI9oIKQL//+BLBwCE4EZX4AdP4AcP4E/H4DdX4Gen4A9v4A8X4DffCSkC//+iI9oIKQI="}'
              qos: 0
              retain: false
        enabled: false
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.bedroom_ac_status
            state: 'On'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/Bedroom Smart IR Remote Control/set
              payload: '{"ir_code_to_send": "B14j7xFAAqcGgAPgBwHAF+ADB8ABQBNAAcAH4AcBQBfAA+AvAUA/4DcB4DtD4DcBwIPAB+AHAUAX4AMD4AQBAgJAAg=="}'
              qos: 0
              retain: false
        enabled: false
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.living_room_tv_status
            state: 'On'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/Smart IR Remote Control/set
              payload: '{"ir_code_to_send": "BWEjoBE5AsABA8sGOQLgCwFAF0ADQAFAB+AHA+ADAUAb4AcBQBPAA0ABwAvABwn5nWEj8wg5Av//4GIHAgg5Ag=="}'
              qos: 0
              retain: false
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.office_tv_status
            state: 'On'
          sequence:
          - service: script.tv_power_office
            data: {}
      - delay:
          hours: 0
          minutes: 5
          seconds: 35
          milliseconds: 0
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Turn off devices except Bedroom TV & AC"
  mode: single
- id: '1687258354025'
  alias: Backup failed notification
  description: Send notification to Supervisor telegram group when backup has failed
    to upload to NAS / Google Drive.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.backups_stale
    to: 'on'
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F6D1 Backup failed!  \U0001F6D1 "
  mode: single
- id: '1687353252073'
  alias: 'Helper: Set Living Room AC Status to On'
  description: Notification to Supervisor group when Living Room AC changed to On
    status.
  trigger:
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: 'on'
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: cool
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: heat
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Living Room AC ❄️ Status has been changed
        to On!"
  mode: single
- id: '1687353338494'
  alias: 'Helper: Set Living Room AC Status to Off'
  description: Notification to Supervisor group when Living Room AC changed to Off
    status.
  trigger:
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: 'off'
    from:
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Living Room AC ❄️ Status has been changed
        to Off!"
  mode: single
- id: '1694084772132'
  alias: No Presence Office
  description: If no presence for 35 minutes+ in Office Room, will turn off the TV/AC.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_presence
    to: 'off'
    for:
      hours: 0
      minutes: 35
      seconds: 0
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: climate.office
        state: cool
      - condition: state
        entity_id: climate.office
        state: heat
    then:
    - service: climate.turn_off
      metadata: {}
      data: {}
      target:
        device_id: ba06295a88107289bcfb16d5f6f459b2
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off AC!"
  - if:
    - condition: state
      entity_id: input_select.office_tv_status
      state: 'On'
      for:
        hours: 0
        minutes: 5
        seconds: 0
    then:
    - service: script.tv_power_office
      metadata: {}
      data: {}
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off TV!"
  mode: single
- id: '1695660239489'
  alias: Bedroom Wireless Remote AC
  description: '1 - Power button

    2 - + Tempature

    3 - - Tempature

    4 - Mode'
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 1_single
    id: button1_singlePress
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 2_single
    id: button2_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 3_single
    id: button3_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 4_single
    id: button4_singlePress
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - button1_singlePress
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.bedroom_ac
            state: cool
          - condition: state
            entity_id: climate.bedroom_ac
            state: heat
        then:
        - service: climate.turn_off
          metadata: {}
          data: {}
          target:
            device_id: 4018257e961bc48fa5b1c539c9efc5ee
        else:
        - service: climate.turn_on
          metadata: {}
          data: {}
          target:
            device_id: 4018257e961bc48fa5b1c539c9efc5ee
    - conditions:
      - condition: trigger
        id:
        - button2_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.bedroom_ac'', ''temperature'')|int(7)
            + 1 }}'
        target:
          entity_id: climate.bedroom_ac
    - conditions:
      - condition: trigger
        id:
        - button3_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.bedroom_ac'', ''temperature'')|int(7)
            - 1 }}'
        target:
          entity_id: climate.bedroom_ac
    - conditions:
      - condition: trigger
        id:
        - button4_singlePress
      sequence: []
  mode: single
- id: '1697368945970'
  alias: Red Alert
  description: Hod HaSharon & Ramla Red Alert
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.oref_alert_home
    to: 'on'
    from: 'off'
    id: home_alert
  - platform: state
    entity_id:
    - binary_sensor.oref_alert_ramla
    from: 'off'
    to: 'on'
    id: ramla_alert
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - home_alert
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Red Alert \U0001F680"
      enabled: true
    - if:
      - condition: state
        entity_id: binary_sensor.any_phone_at_home
        state: 'on'
      - condition: time
        after: '16:00:00'
        before: '22:40:00'
      then:
      - service: notify.alexa_media_shower_echo_dot
        data:
          message: AZAKAA
    - service: notify.mobile_app_elians_iphone
      data:
        message: "\U0001F680 אזעקות בהוד השרון\U0001F680"
    - service: light.turn_on
      data: {}
      target:
        device_id:
        - 121a0c6ddafe33985ea0806ad01fb779
        - 16df7102b63d09b6fcc378186c583972
  - if:
    - condition: trigger
      id:
      - ramla_alert
    then:
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - Red Alert Ramla \U0001F680"
    - service: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: "\U0001F680 אזעקות ברמלה \U0001F680"
  mode: single
- id: '1705996645975'
  alias: Shower Automations
  description: '1. Turn heater off after 35 minutes

    2. Turn Boiler off after 1 hour and 40 minutes

    3. Input select Shower Heater to on

    4. Input select Shower Heater to off

    5. Boiler On Notification

    6. Boiler Off Notification'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 35
      seconds: 0
    above: 250
    id: heater
  - platform: state
    entity_id:
    - input_select.switcher_boiler_status
    to: 'On'
    for:
      hours: 1
      minutes: 40
      seconds: 0
    id: boiler_on_for_1_hour_40_minutes
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 0
      seconds: 10
    above: 250
    id: heater_power_on
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 30
      seconds: 0
    id: heater_power_off
    below: 15
  - platform: numeric_state
    entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 3
    above: 5
    id: Boiler_On_Notification
  - platform: numeric_state
    entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    id: Boiler_Off_Notification
    below: 5
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - heater
    - condition: state
      entity_id: switch.heater_shower
      state: 'on'
    then:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        device_id: 699c416a4aefdc84921eb1f8e72b4cad
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - ♨️ Someone forgot the Heater on! Turned
          it OFF. ♨️"
    alias: '1'
  - if:
    - condition: trigger
      id:
      - boiler_on_for_1_hour_40_minutes
    - condition: state
      entity_id: switch.boiler
      state: 'on'
    then:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        device_id: 928250a9ace44dda8bbe162fc9440d6d
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Turn Boiler off after 1 hour and 40 minutes
          \U0001F6BF"
    - service: notify.mobile_app_elians_iphone
      data:
        message: השארת את הדוד דולק לשעתיים, סוגר את הדוד!
    alias: '2'
  - alias: '3'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - heater_power_on
      - condition: state
        entity_id: input_select.shower_heater_status
        state: 'off'
    then:
    - service: input_select.select_option
      target:
        entity_id: input_select.shower_heater_status
      data:
        option: 'on'
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Shower Heater Status has been changed
          to On!"
  - alias: '4'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - heater_power_off
      - condition: state
        entity_id: input_select.shower_heater_status
        state: 'on'
    then:
    - service: input_select.select_option
      target:
        entity_id: input_select.shower_heater_status
      data:
        option: 'off'
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Shower Heater Status has been changed
          to Off!"
  - alias: '5'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - Boiler_On_Notification
      - condition: state
        entity_id: input_select.switcher_boiler_status
        state: 'Off'
    then:
    - service: input_select.select_option
      target:
        entity_id:
        - input_select.switcher_boiler_status
      data:
        option: 'On'
    - service: notify.home_assistant_group
      data:
        message: "\U0001F6BF Switcher device has been turned ON!"
  - alias: '6'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - Boiler_Off_Notification
      - condition: state
        entity_id: input_select.switcher_boiler_status
        state: 'On'
    then:
    - service: input_select.select_option
      target:
        entity_id:
        - input_select.switcher_boiler_status
      data:
        option: 'Off'
    - service: notify.home_assistant_group
      data:
        message: "\U0001F6BF Switcher device has been turned OFF!"
  mode: single
- id: '1706093864988'
  alias: Water Leakage Notification
  description: Will notify if there is a leakage anywhere in the house.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.water_leak_shower_sink_water_leak
    from: 'off'
    to: 'on'
    id: shower_sink
  - platform: state
    entity_id:
    - binary_sensor.water_leak_office_sink_water_leak
    from: 'off'
    to: 'on'
    id: office_sink
  - platform: state
    entity_id:
    - binary_sensor.water_leak_sensor_kitchen_sink_water_leak
    from: 'off'
    to: 'on'
    id: kitchen_sink
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kitchen_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Kitchen ⚠️
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Kitchen ⚠️
    - conditions:
      - condition: trigger
        id:
        - shower_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Shower Room⚠️
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Shower Room⚠️
    - conditions:
      - condition: trigger
        id:
        - office_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Office Bathroom/Shower Room⚠️
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ⚠️ Water Leak has been detected in Office Bathroom/Shower Room⚠️
  mode: single
- id: '1706102094343'
  alias: Office Sticker Button
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.office_desk_button_action
    to: single
    id: single_press
  - platform: state
    entity_id:
    - sensor.office_desk_button_action
    to: hold
    id: hold_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - single_press
      sequence:
      - service: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.tv_power_office
    - conditions:
      - condition: trigger
        id:
        - hold_press
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.office
            state: cool
          - condition: state
            entity_id: climate.office
            state: heat
        then:
        - service: climate.turn_off
          target:
            device_id: ba06295a88107289bcfb16d5f6f459b2
          data: {}
        else:
        - service: climate.turn_on
          target:
            device_id: ba06295a88107289bcfb16d5f6f459b2
          data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Office Switch Sticker Button"
  mode: single
- id: '1706112151664'
  alias: Living Room Wireless Remote Switch
  description: '1 - Power button

    2 - + Tempature

    3 - - Tempature

    4 - Mode'
  trigger:
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 1_single
    id: button1_singlePress
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 2_single
    id: button2_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 3_single
    id: button3_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 4_single
    id: button4_singlePress
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - button1_singlePress
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.ofir_a_c
            state: cool
          - condition: state
            entity_id: climate.ofir_a_c
            state: heat
        then:
        - service: climate.turn_off
          metadata: {}
          data: {}
          target:
            device_id: 5747456c3abcc55ad57e3875baf58ba2
        else:
        - service: climate.turn_on
          metadata: {}
          data: {}
          target:
            device_id: 5747456c3abcc55ad57e3875baf58ba2
    - conditions:
      - condition: trigger
        id:
        - button2_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.ofir_a_c'', ''temperature'')|int(7)
            + 1 }}'
        target:
          entity_id: climate.ofir_a_c
    - conditions:
      - condition: trigger
        id:
        - button3_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.ofir_a_c'', ''temperature'')|int(7)
            - 1 }}'
        target:
          entity_id: climate.ofir_a_c
    - conditions:
      - condition: trigger
        id:
        - button4_singlePress
      sequence: []
  mode: single
- id: '1706113074480'
  alias: Wardrobe Wireless Remote Switch
  description: '1 - Power button

    2 - + Tempature

    3 - - Tempature

    4 - '
  trigger:
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    to: 1_single
    id: button1_singlePress
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    to: 2_single
    id: button2_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    to: 3_single
    id: button3_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 4_single
    id: button4_singlePress
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - button1_singlePress
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.wardrobe
            state: cool
          - condition: state
            entity_id: climate.wardrobe
            state: heat
        then:
        - service: climate.turn_off
          metadata: {}
          data: {}
          target:
            device_id: e2751f5fc46e28c792195795f124989d
        else:
        - service: climate.turn_on
          metadata: {}
          data: {}
          target:
            device_id: e2751f5fc46e28c792195795f124989d
    - conditions:
      - condition: trigger
        id:
        - button2_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.wardrobe'', ''temperature'')|int(7)
            + 1 }}'
        target:
          entity_id: climate.wardrobe
    - conditions:
      - condition: trigger
        id:
        - button3_singlePress
      sequence:
      - service: climate.set_temperature
        data:
          temperature: '{{ state_attr(''climate.wardrobe'', ''temperature'')|int(7)
            - 1 }}'
        target:
          entity_id: climate.wardrobe
    - conditions:
      - condition: trigger
        id:
        - button4_singlePress
      sequence: []
  mode: single
- id: '1706286005645'
  alias: Kitchen Automations
  description: '1. Smoke Detector

    '
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_smoke_detector_smoke
    from: 'off'
    to: 'on'
    id: smoke_detected
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - smoke_detected
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F6A8 Smoke Detected in Kitchen!"
    - service: notify.notify
      metadata: {}
      data:
        message: "\U0001F6A8SMOKE DETECTED IN KITCHEN \U0001F6A8"
  mode: single
