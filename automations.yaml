- id: '1672140546661'
  alias: GitHub Push
  description: Everyday in 4AM will update the github.
  trigger:
  - platform: time
    at: 04:00:00
  condition: []
  action:
  - service: shell_command.pushupdates_to_github
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - GitHub Push"
  mode: single
- id: '1672416137952'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      time: '19:00:00'
      exclude:
        entity_id:
        - sensor.elians_iphone_battery_level
        - sensor.ofir_honor_magic_5_pro_battery_level
      actions:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - {{sensors}} has low on battery, please
            replace it."
- id: '1673808016982'
  alias: Bedroom A/C Bedroom OFF
  description: ''
  trigger:
  - platform: time
    at: 01:00:00
    id: 1:00 am
    alias: At 1:00 am
  - platform: state
    entity_id:
    - input_select.bedroom_ac_status
    to: 'On'
    id: Bedroom A/C turned on
    alias: Bedroom A/C turned on
  - platform: state
    entity_id:
    - input_select.bedroom_ac_status
    to: 'Off'
    id: Bedroom A/C turned off
    alias: Bedroom A/C turned off
  - platform: state
    entity_id:
    - timer.a_c_timer
    to: idle
    id: Timer Finished
    from: active
    alias: Bedroom A/C timer finished/canceled
  condition:
  - condition: time
    before: 05:30:00
    after: 01:00:00
    alias: Time between 1 am & 5 am
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 1:00 am
          alias: Triggered at 01:00 am
        - condition: trigger
          id: Bedroom A/C turned on
          alias: Triggered by Bedroom A/C turned on
        alias: Triggered by 1:00 am or Bedroom A/C turned on
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'On'
      sequence:
      - service: timer.start
        data:
          duration: 01:30:00
        alias: Start Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
    - conditions:
      - condition: trigger
        id: Bedroom A/C turned off
        alias: Bedroom A/C turned off
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'Off'
      sequence:
      - service: timer.cancel
        data: {}
        alias: Cancel Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
    - conditions:
      - condition: trigger
        id: Timer Finished
        alias: Bedroom A/C Timer Finished
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.bedroom_ac
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Bedroom A/C automation has closed the
            A/C!"
  mode: single
- id: '1675145318623'
  alias: New Item Added to Shopping List
  description: Notification to Telegram Group when new Item has been added to Shopping
    List.
  trigger:
  - platform: event
    event_type: shopping_list_updated
    event_data:
      action: add
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      message: "\U0001F6D2 {{ trigger.event.data.item.name }}\nhas been added to the
        shopping list.\n"
      data:
        clickAction: /shopping-list
        url: /shopping-list
  mode: single
- id: '1675577446512'
  alias: Supervisor - Elian is Away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.elians_iphone
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 0
      seconds: 50
    id: elian_left_home
  - platform: device
    device_id: 611a494457823cb15ab854ae5b741ef0
    domain: device_tracker
    entity_id: 4d605a96e7d9ad764a8f357609e42ebd
    type: enters
    zone: zone.mofit
    id: elian_enter_mofit
  - platform: device
    device_id: 611a494457823cb15ab854ae5b741ef0
    domain: device_tracker
    entity_id: 4d605a96e7d9ad764a8f357609e42ebd
    type: leaves
    zone: zone.mofit
    id: elian_leaving_mofit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - elian_enter_mofit
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has entered Mofit."
    - conditions:
      - condition: trigger
        id:
        - elian_leaving_mofit
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left Mofit."
    - conditions:
      - condition: trigger
        id:
        - elian_left_home
      sequence:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left the house."
  mode: single
- id: '1676503252475'
  alias: Hallway Motion Light
  description: between 00:01 to 6:55 light will turn on for 1 minute and 20 seconds
    in the hallway
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_motion_sensor_occupancy
    to: 'on'
    id: Motion Detected on Dining Table by Person
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.bedroom_motion_sensor_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    enabled: true
  condition:
  - condition: time
    after: 00:00:00
    before: 06:30:00
  action:
  - if:
    - condition: trigger
      id: Motion Detected on Dining Table by Person
    - condition: time
      after: 00:01:00
      before: 06:30:00
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'Off'
    then:
    - condition: state
      entity_id: light.yeelink_color5_6079_light
      state: 'off'
    - service: light.turn_on
      data:
        brightness_pct: 6
      target:
        device_id: 5972c49b7f01f8fde1fe7d5f02db377d
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Hallway Motion Light"
    else:
    - service: light.turn_off
      data:
        transition: 15
      target:
        device_id: 5972c49b7f01f8fde1fe7d5f02db377d
    enabled: true
  mode: single
- id: '1676677991115'
  alias: Notify with camera snapshot when motion is detected and both of you are not
    home
  description: When Elian & Ofir are not home and motion detected person
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: state
    entity_id:
    - binary_sensor.living_room_right_window_contact
    - binary_sensor.living_room_left_window_contact
    - binary_sensor.main_door_sensor_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: device
      device_id: 3991a8dcff5132448a99a281daf3577d
      domain: device_tracker
      entity_id: ee5300687733e0be5478ba30e2f369e0
      type: is_not_home
    - condition: device
      device_id: 611a494457823cb15ab854ae5b741ef0
      domain: device_tracker
      entity_id: device_tracker.elians_iphone
      type: is_not_home
  - condition: state
    entity_id: vacuum.roborock_s8_pro_ultra
    state: docked
  - condition: state
    entity_id: binary_sensor.living_room_person
    state: 'on'
  action:
  - service: camera.snapshot
    data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
    target:
      entity_id: camera.living_room_sub
  - service: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - Notify with camera snapshot when motion is
        detected!"
  mode: single
- id: '1678624466464'
  alias: Feeding is Required
  description: ''
  trigger:
  - platform: time
    at: sensor.feed_is_missing_timestamp
  condition: []
  action:
  - service: notify.home_assistant_group
    data:
      message: "\U0001F41F ‚ùå The fishes have not been fed for more than 2 days!"
  mode: single
- id: '1687162895738'
  alias: Turn off devices except Bedroom TV & AC
  description: Turning off all household devices like TVs and Lights, except Bedroom
    TV and Air Conditioner.
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_sticker_switch_button_action
    to: hold
  condition: []
  action:
  - service: script.home_leave
    metadata: {}
    data: {}
  mode: single
- id: '1687258354025'
  alias: Backup failed notification
  description: Send notification to Supervisor telegram group when backup has failed
    to upload to NAS / Google Drive.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.backups_stale
    to: 'on'
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F6D1 Backup failed!  \U0001F6D1 "
  mode: single
- id: '1697368945970'
  alias: Red Alert
  description: Hod HaSharon & Ramla Red Alert
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.oref_alert_home
    to: 'on'
    from: 'off'
    id: home_alert
  - platform: state
    entity_id:
    - binary_sensor.oref_alert_ramla
    from: 'off'
    to: 'on'
    id: ramla_alert
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - home_alert
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Red Alert \U0001F680"
      enabled: true
    - if:
      - condition: state
        entity_id: binary_sensor.any_phone_at_home
        state: 'on'
      - condition: time
        after: '16:00:00'
        before: '22:40:00'
      then:
      - service: notify.alexa_media_shower_echo_dot
        data:
          message: AZAKAA
    - service: notify.mobile_app_elians_iphone
      data:
        message: "\U0001F680 ◊ê◊ñ◊¢◊ß◊ï◊™ ◊ë◊î◊ï◊ì ◊î◊©◊®◊ï◊ü\U0001F680"
    - service: light.turn_on
      data:
        color_name: red
      target:
        entity_id: light.yeelink_color5_6079_light
    - if:
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'On'
      then:
      - service: notify.living_room_lg_webos_smart_tv
        data:
          message: ◊¶◊ë◊¢ ◊ê◊ì◊ï◊ù - ◊î◊ï◊ì ◊î◊©◊®◊ï◊ü
  - if:
    - condition: trigger
      id:
      - ramla_alert
    then:
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - Red Alert Ramla \U0001F680"
    - service: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: "\U0001F680 ◊ê◊ñ◊¢◊ß◊ï◊™ ◊ë◊®◊û◊ú◊î \U0001F680"
    - if:
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'On'
      then:
      - service: notify.living_room_lg_webos_smart_tv
        data:
          message: ◊¶◊ë◊¢ ◊ê◊ì◊ï◊ù - ◊®◊û◊ú◊î
  mode: single
- id: '1705996645975'
  alias: Shower Automations
  description: '1. Turn heater off after 35 minutes

    2. Turn Boiler off after 1 hour and 20 minutes

    3. Input select Shower Heater to on

    4. Input select Shower Heater to off

    5. Boiler On Notification

    6. Boiler Off Notification

    7. Light On Notification

    8. Light Off Notification

    9. Clean Room'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 35
      seconds: 0
    above: 250
    id: heater
  - platform: state
    entity_id:
    - input_select.switcher_boiler_status
    to: 'On'
    for:
      hours: 1
      minutes: 20
      seconds: 0
    id: boiler_on_for_1_hour_20_minutes
    from: 'Off'
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 0
      seconds: 10
    above: 250
    id: heater_power_on
  - platform: numeric_state
    entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: heater_power_off
    below: 15
  - platform: numeric_state
    entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 3
    above: 5
    id: Boiler_On_Notification
  - platform: numeric_state
    entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    id: Boiler_Off_Notification
    below: 5
  - platform: state
    entity_id:
    - light.shower_l1
    from: 'off'
    to: 'on'
    id: light_to_on
  - platform: state
    entity_id:
    - light.shower_l1
    from: 'on'
    to: 'off'
    id: light_to_off
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - heater
    - condition: state
      entity_id: switch.heater_shower
      state: 'on'
    then:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        device_id: 699c416a4aefdc84921eb1f8e72b4cad
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - ‚ô®Ô∏è Someone forgot the Heater on! Turned
          it OFF. ‚ô®Ô∏è"
    alias: '1'
  - alias: '2'
    if:
    - condition: trigger
      id:
      - boiler_on_for_1_hour_20_minutes
    then:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        device_id: 928250a9ace44dda8bbe162fc9440d6d
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Turn Boiler off after 1 hour and 20 minutes
          \U0001F6BF"
  - alias: '3'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - heater_power_on
      - condition: state
        entity_id: input_select.shower_heater_status
        state: 'off'
    then:
    - service: input_select.select_option
      target:
        entity_id: input_select.shower_heater_status
      data:
        option: 'on'
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ‚ô®Ô∏è Shower Heater Status has been changed
          to On!"
  - alias: '4'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - heater_power_off
      - condition: state
        entity_id: input_select.shower_heater_status
        state: 'on'
    then:
    - service: input_select.select_option
      target:
        entity_id: input_select.shower_heater_status
      data:
        option: 'off'
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ‚ô®Ô∏è Shower Heater Status has been changed
          to Off!"
  - alias: '5'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - Boiler_On_Notification
      - condition: state
        entity_id: input_select.switcher_boiler_status
        state: 'Off'
    then:
    - service: input_select.select_option
      target:
        entity_id:
        - input_select.switcher_boiler_status
      data:
        option: 'On'
    - service: notify.home_assistant_group
      data:
        message: "\U0001F6BF Boiler has been turned ON!"
    - service: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: "\U0001F6BF Boiler has been turned ON!"
  - alias: '6'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - Boiler_Off_Notification
      - condition: state
        entity_id: input_select.switcher_boiler_status
        state: 'On'
    then:
    - service: input_select.select_option
      target:
        entity_id:
        - input_select.switcher_boiler_status
      data:
        option: 'Off'
    - service: notify.home_assistant_group
      data:
        message: "\U0001F6BF Boiler has been turned OFF!"
    - service: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: "\U0001F6BF Boiler has been turned OFF!"
  - alias: '7'
    if:
    - condition: trigger
      id:
      - light_to_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Shower \U0001F6C1"
  - alias: '8'
    if:
    - condition: trigger
      id:
      - light_to_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Shower \U0001F6C1"
  - alias: '9'
    if:
    - condition: trigger
      id:
      - light_to_off
      enabled: false
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 22
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Shower
          room!"
    enabled: false
  mode: single
- id: '1706093864988'
  alias: Water Leakage Notification
  description: Will notify if there is a leakage anywhere in the house.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.water_leak_shower_sink_water_leak
    from: 'off'
    to: 'on'
    id: shower_sink
  - platform: state
    entity_id:
    - binary_sensor.water_leak_office_sink_water_leak
    from: 'off'
    to: 'on'
    id: office_sink
  - platform: state
    entity_id:
    - binary_sensor.water_leak_sensor_kitchen_sink_water_leak
    from: 'off'
    to: 'on'
    id: kitchen_sink
  - platform: state
    entity_id:
    - binary_sensor.water_leak_laundry_machine_water_leak
    from: 'off'
    to: 'on'
    id: laundry_machine
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kitchen_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Kitchen ‚ö†Ô∏è
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Kitchen ‚ö†Ô∏è
    - conditions:
      - condition: trigger
        id:
        - shower_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Shower Room‚ö†Ô∏è
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Shower Room‚ö†Ô∏è
    - conditions:
      - condition: trigger
        id:
        - office_sink
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Office Bathroom/Shower Room‚ö†Ô∏è
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Office Bathroom/Shower Room‚ö†Ô∏è
    - conditions:
      - condition: trigger
        id:
        - laundry_machine
      sequence:
      - service: notify.notify
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Boiler / Laundry Machine area‚ö†Ô∏è
      - service: notify.home_assistant_group
        metadata: {}
        data:
          message: ‚ö†Ô∏è Water Leak has been detected in Boiler / Laundry Machine area‚ö†Ô∏è
  mode: single
- id: '1706286005645'
  alias: Kitchen Automations
  description: '1. Smoke Detector

    2. Turn ON Kitchen LED Switch

    3. Turn OFF Kitchen LED Switch

    4. Kitchen Light On Notification

    5. Kitchen Light Off Notification

    6. Laundry Machine Light On Notification

    7. Laundry Machine Light Off Notification

    8. Laundry machine has started Notification

    9. Laundry machine has finished Notification

    10. Robot Vacuum Started Notification

    11. Robot Vacuum Finished Notification

    12. Clean Room via hold button press.

    13. Kitchen LED Light toggle via single button press.'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_smoke_detector_smoke
    from: 'off'
    to: 'on'
    id: smoke_detected
  - platform: sun
    event: sunset
    offset: 0
    id: sun_set
  - platform: time
    at: 00:00:00
    id: midnight
  - platform: state
    entity_id:
    - light.kitchen_l1
    from: 'off'
    to: 'on'
    id: light_set_on
  - platform: state
    entity_id:
    - light.kitchen_l1
    from: 'on'
    to: 'off'
    id: light_set_off
  - platform: state
    entity_id:
    - light.laundry_machine_light
    from: 'off'
    to: 'on'
    id: laundry_light_set_on
  - platform: state
    entity_id:
    - light.laundry_machine_light
    from: 'on'
    to: 'off'
    id: laundry_light_set_off
  - platform: numeric_state
    entity_id:
    - sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 0
      seconds: 3
    above: 25
    id: laundry_machine_set_on
  - platform: numeric_state
    entity_id:
    - sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 4
      seconds: 30
    id: laundry_machine_set_off
    below: 2
  - platform: state
    entity_id:
    - vacuum.roborock_s8_pro_ultra
    to: 'on'
    id: vacuum_robot_cleaning
    attribute: state
  - platform: state
    entity_id:
    - vacuum.roborock_s8_pro_ultra
    to: 'off'
    id: vacuum_robot_finished
    from: 'on'
    attribute: state
  - platform: state
    entity_id:
    - sensor.kitchen_sticker_switch_button_action
    to: hold
    id: stickerbutton_hold
  - platform: state
    entity_id:
    - sensor.kitchen_sticker_switch_button_action
    to: single
    id: stickerbutton_single
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - smoke_detected
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F6A8 Smoke Detected in Kitchen!"
    - service: notify.notify
      metadata: {}
      data:
        message: "\U0001F6A8SMOKE DETECTED IN KITCHEN \U0001F6A8"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - sun_set
    - condition: state
      entity_id: switch.kitchen_led_strip
      state: 'off'
    then:
    - service: switch.turn_on
      metadata: {}
      data: {}
      target:
        device_id: 92fdadf222970875f82e2d221e4612e4
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 LED Strip is now on in the Kitchen!"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - midnight
    - condition: state
      entity_id: switch.kitchen_led_strip
      state: 'on'
    then:
    - service: switch.turn_off
      target:
        device_id:
        - 92fdadf222970875f82e2d221e4612e4
      data: {}
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 LED Strip is now off in the Kitchen!"
  - alias: '4'
    if:
    - condition: trigger
      id:
      - light_set_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Kitchen\U0001F52A"
  - alias: '5'
    if:
    - condition: trigger
      id:
      - light_set_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Kitchen\U0001F52A"
  - alias: '6'
    if:
    - condition: trigger
      id:
      - laundry_light_set_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Laundry Machine Light is on in
          Kitchen \U0001F52A"
  - alias: '7'
    if:
    - condition: trigger
      id:
      - laundry_light_set_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Laundry Machine Light is off
          in Kitchen \U0001F52A"
  - alias: '8'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - laundry_machine_set_on
      - condition: state
        entity_id: input_select.washing_machine_status
        state: 'Off'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'On'
      target:
        entity_id: input_select.washing_machine_status
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F456 Laundry machine has started!"
  - alias: '9'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - laundry_machine_set_off
      - condition: state
        entity_id: input_select.washing_machine_status
        state: 'On'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'Off'
      target:
        entity_id: input_select.washing_machine_status
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F456 Laundry machine has finished!"
    - service: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.laundry_machine_light
    - service: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: "\U0001F456 Laundry machine has finished!"
  - alias: '10'
    if:
    - condition: trigger
      id:
      - vacuum_robot_cleaning
    then:
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F9F9 Vacuum Robot has started!"
  - alias: '11'
    if:
    - condition: trigger
      id:
      - vacuum_robot_finished
    then:
    - service: camera.snapshot
      data:
        filename: /config/www/tmp/snapshot_vacuum.jpg
      target:
        entity_id:
        - camera.roborock_s8_pro_ultra_map
    - service: notify.home_assistant_group
      data:
        title: "\U0001F9F9 Vacuum Robot has finished and returned to base!"
        message: It took {{ ( states('sensor.roborock_s8_pro_ultra_last_clean_duration')
          | int / 60 ) | round(1) }} minutes and covered {{ states('sensor.roborock_s8_pro_ultra_current_clean_area')
          }} m¬≤.
      enabled: false
    - service: telegram_bot.send_photo
      data:
        authentication: digest
        file: /config/www/tmp/snapshot_vacuum.jpg
        caption: "\U0001F9F9 Vacuum Robot has finished and returned to base!               It
          took {{ ( states('sensor.roborock_s8_pro_ultra_last_clean_duration') | int
          / 60 ) | round(1) }} minutes and covered {{ states('sensor.roborock_s8_pro_ultra_current_clean_area')
          }} m¬≤."
    - service: notify.mobile_app_elians_iphone
      data:
        title: Vacuum Robot
        message: "\U0001F9F9 Vacuum Robot has finished and returned to base!               It
          took {{ ( states('sensor.roborock_s8_pro_ultra_last_clean_duration') | int
          / 60 ) | round(1) }} minutes and covered {{ states('sensor.roborock_s8_pro_ultra_current_clean_area')
          }} m¬≤.\n"
        data:
          image: /local/tmp/snapshot_vacuum.jpg
  - alias: '12'
    if:
    - condition: trigger
      id:
      - stickerbutton_hold
      enabled: true
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 24
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Kitchen
          room!"
    enabled: true
  - alias: '13'
    if:
    - condition: trigger
      id:
      - stickerbutton_single
      enabled: true
    then:
    - service: switch.toggle
      metadata: {}
      data: {}
      target:
        entity_id: switch.kitchen_led_strip
    enabled: true
  mode: single
- id: '1707598067921'
  alias: Living Room Automations
  description: '1. TV Off Notification

    2. TV On Notification

    3. TV Power button - 1_single

    4. +Tempature - 2_single

    5. -Tempature - 3_single

    6. Light toggle - 4_single

    7. Clean Room'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 5
      seconds: 40
    below: 5
    id: tv_is_off
  - platform: numeric_state
    entity_id:
    - sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    id: tv_is_on
    above: 10
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 1_single
    id: button1_singlePress
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 2_single
    id: button2_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 3_single
    id: button3_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.living_room_wireless_remote_switch_action
    to: 4_single
    id: button4_singlePress
    enabled: true
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - tv_is_off
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'Off'
      target:
        entity_id: input_select.living_room_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
          changed to Off!"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - tv_is_on
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'Off'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'On'
      target:
        entity_id: input_select.living_room_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
          changed to On!"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - button1_singlePress
    then:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.ofir_a_c
          state: cool
        - condition: state
          entity_id: climate.ofir_a_c
          state: heat
      then:
      - service: climate.turn_off
        metadata: {}
        data: {}
        target:
          device_id: 5747456c3abcc55ad57e3875baf58ba2
      else:
      - service: climate.turn_on
        metadata: {}
        data: {}
        target:
          device_id: 5747456c3abcc55ad57e3875baf58ba2
  - alias: '4'
    if:
    - condition: trigger
      id:
      - button2_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.ofir_a_c'', ''temperature'')|int(7)
          + 1 }}'
      target:
        entity_id: climate.ofir_a_c
  - alias: '5'
    if:
    - condition: trigger
      id:
      - button3_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.ofir_a_c'', ''temperature'')|int(7)
          - 1 }}'
      target:
        entity_id: climate.ofir_a_c
  - alias: '6'
    if:
    - condition: trigger
      id:
      - button4_singlePress
    then:
    - service: light.toggle
      metadata: {}
      data: {}
      target:
        entity_id: light.living_room_l1
  - alias: '7'
    if:
    - condition: trigger
      id:
      - button4_singlePress
      enabled: false
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 23
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Living
          room!"
    enabled: false
  mode: single
- id: '1709139085917'
  alias: Bathroom Automations
  description: '1. Turn lights off after 10 minutes without motion.

    2. Light On Notification

    3. Light Off Notification

    4. Clean Room'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_motion_sensor_occupancy
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: no_motion
  - platform: state
    entity_id:
    - light.bathroom
    from: 'off'
    to: 'on'
    id: light_to_on
  - platform: state
    entity_id:
    - light.bathroom
    from: 'on'
    to: 'off'
    id: light_to_off
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - no_motion
    - condition: state
      entity_id: light.bathroom
      state: 'on'
    then:
    - service: light.turn_off
      target:
        entity_id: light.bathroom
      data: {}
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F6BD No Presence at Bathroom - Light
          off \U0001F4A1"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - light_to_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Bathroom \U0001F6BD"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - light_to_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Bathroom \U0001F6BD"
  - alias: '4'
    if:
    - condition: trigger
      id:
      - light_to_off
      enabled: false
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 20
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Bathroom!"
    enabled: false
  mode: single
- id: '1709151799515'
  alias: Wardrobe Automations
  description: '1. Light On Notification

    2. Light Off Notification

    3. Toggle AC - Button 1 Wireless Remote

    4. Add +1 Degree to AC - Button 2 Wireless Remote

    5. -1 Degree to AC - Button 3 Wireless Remote

    6. If corridor light is on for 5 minutes - turn it off

    7. Clean Room'
  trigger:
  - platform: state
    entity_id:
    - light.wardrobe
    from: 'off'
    to: 'on'
    id: light_to_on
  - platform: state
    entity_id:
    - light.wardrobe
    from: 'on'
    to: 'off'
    id: light_to_off
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    id: button1_singlePress
    to: 1_single
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    id: button2_singlePress
    to: 2_single
  - platform: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    id: button3_singlePress
    to: 3_single
  - platform: state
    entity_id:
    - sensor.wardrobe_sticker_switch_button_action
    to: hold
    id: sticker_hold_press
  - platform: state
    entity_id:
    - light.yeelink_color5_6079_light
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: corridor_light_on_5mins
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - light_to_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Wardrobe\U0001F457"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - light_to_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Wardrobe\U0001F457"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - button1_singlePress
    then:
    - if:
      - condition: state
        entity_id: input_select.wardrobe_ac_status
        state: 'On'
      then:
      - service: climate.turn_off
        metadata: {}
        data: {}
        target:
          device_id: e2751f5fc46e28c792195795f124989d
      else:
      - service: climate.turn_on
        metadata: {}
        data: {}
        target:
          device_id: e2751f5fc46e28c792195795f124989d
  - alias: '4'
    if:
    - condition: trigger
      id:
      - button2_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.wardrobe'', ''temperature'')|int(7)
          + 1 }}'
      target:
        entity_id: climate.wardrobe
  - alias: '5'
    if:
    - condition: trigger
      id:
      - button3_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.wardrobe'', ''temperature'')|int(7)
          - 1 }}'
      target:
        entity_id: climate.wardrobe
  - alias: '6'
    if:
    - condition: trigger
      id:
      - corridor_light_on_5mins
      enabled: true
    then:
    - service: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.yeelink_color5_6079_light
    enabled: true
  - alias: '7'
    if:
    - condition: trigger
      id:
      - sticker_hold_press
      enabled: true
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 16
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Wardrobe
          room!"
    enabled: true
  mode: single
- id: '1709211665820'
  alias: Office Automations
  description: '1. TV On Notification

    2. TV Off Notification

    3. Desk Button Single Press - TV Toggle

    4. Desk Button Hold Press - AC Toggle

    9. Clean Room

    11. Light On Office Notification

    12. Light Off Office Notification

    13. Light On Office Bathroom Notification

    14. Light Off Office Bathroom Notification

    '
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.office_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 8
    above: 12
    id: tv_on
  - platform: numeric_state
    entity_id:
    - sensor.office_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 30
    id: tv_off
    below: 11
  - platform: state
    entity_id:
    - sensor.office_desk_button_action
    to: single
    id: office_desk_button_1singlePress
  - platform: state
    entity_id:
    - sensor.office_desk_button_action
    to: hold
    id: office_desk_button_1holdPress
  - platform: state
    entity_id:
    - light.office
    to: 'on'
    id: office_light_on
    from: 'off'
  - platform: state
    entity_id:
    - light.office
    to: 'off'
    id: office_light_off
    from: 'on'
  - platform: state
    entity_id:
    - light.office_bathroom
    to: 'on'
    id: office_bathroom_light_on
    from: 'off'
  - platform: state
    entity_id:
    - light.office_bathroom
    to: 'off'
    id: office_bathroom_light_off
    from: 'on'
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - tv_on
    - condition: state
      entity_id: input_select.office_tv_status
      state: 'Off'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'On'
      target:
        entity_id:
        - input_select.office_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
          to On!"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - tv_off
    - condition: state
      entity_id: input_select.office_tv_status
      state: 'On'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'Off'
      target:
        entity_id:
        - input_select.office_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
          to Off!"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - office_desk_button_1singlePress
    then:
    - service: script.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: script.tv_power_office
  - alias: '4'
    if:
    - condition: trigger
      id:
      - office_desk_button_1holdPress
    then:
    - service: script.toggle_office_ac
      metadata: {}
      data: {}
  - alias: '10'
    if:
    - condition: trigger
      id:
      - office_light_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Office \U0001F4DD"
  - alias: '11'
    if:
    - condition: trigger
      id:
      - office_light_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Office \U0001F4DD"
  - alias: '12'
    if:
    - condition: trigger
      id:
      - office_bathroom_light_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Office Bathroom
          \U0001F4DD\U0001F9FB"
  - alias: '13'
    if:
    - condition: trigger
      id:
      - office_bathroom_light_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Office Bathroom
          \U0001F4DD\U0001F9FB"
  - alias: '14'
    if:
    - condition: trigger
      id:
      - light_to_off
      enabled: false
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 22
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Shower
          room!"
    enabled: false
  variables:
    values: "{% if state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1') is not
      none %}\n  {% set value = (state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1')
      | from_json).value[0].value.split(',') %}\n  {% set timestamp = (state_attr('switch.hfjh_v2_eadb_fish_tank_2',
      'event.4.1') | from_json).timestamp %}\n{% endif %} {% set timestamp =  timestamp
      | default() | timestamp_custom('%H:%M %A', default='unknown') %} {% set value
      = (value | default())[6] | default('unknown') %} {% set error = (value | default())[5]
      | default() == 0 %} {{ dict(timestamp=timestamp,value=value,error=error) }}\n"
  mode: single
- id: '1709548823407'
  alias: Bedroom Automations
  description: '1. Light On Notification

    2. Light Off Notification

    3. TV On Notification

    4. TV Off Notification

    5. Wireless Remote - 1st button AC Power toggle

    6. Wireless Remote - 2nd button AC + Tempature

    7. Wireless Remote - 3rd button AC  - Tempature

    8. Wireless Remote - 4th button Toggle TV

    9. Wireless Remote - 1st button Hold - Light toggle

    10. Vibration Drawer will toggle room light

    11. Clean Room'
  trigger:
  - platform: state
    entity_id:
    - light.bedroom
    from: 'off'
    to: 'on'
    id: light_to_on
  - platform: state
    entity_id:
    - light.bedroom
    from: 'on'
    to: 'off'
    id: light_to_off
  - platform: numeric_state
    entity_id:
    - sensor.bedroom_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    above: 5
    id: tv_is_on
  - platform: numeric_state
    entity_id:
    - sensor.bedroom_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 45
    id: tv_is_off
    below: 4
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 1_single
    id: button1_elianRemote_singlePress
  - platform: state
    entity_id:
    - sensor.bedroom_second_wireless_remote_ac_action
    to: 1_single
    id: button1_ofirRemote_singlePress
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 2_single
    id: button2_elianRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_second_wireless_remote_ac_action
    to: 2_single
    id: button2_ofirRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 3_single
    id: button3_elianRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_second_wireless_remote_ac_action
    to: 3_single
    id: button3_ofirRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 4_single
    id: button4_elianRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_second_wireless_remote_ac_action
    to: 4_single
    id: button4_ofirRemote_singlePress
    enabled: true
  - platform: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    to: 1_double
    id: button1_elianRemote_doublePress
  - platform: state
    entity_id:
    - sensor.bedroom_second_wireless_remote_ac_action
    to: 1_double
    id: button1_ofirRemote_doublePress
  - platform: state
    entity_id:
    - sensor.bedroom_vibration_action
    to: vibration
    id: vibration
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - light_to_on
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is on in Bedroom \U0001F6CFÔ∏è"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - light_to_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - \U0001F4A1 Light is off in Bedroom \U0001F6CFÔ∏è"
  - alias: '3'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - tv_is_on
      - condition: state
        entity_id: input_select.bedroom_tv_status
        state: 'Off'
    then:
    - service: input_select.select_option
      data:
        option: 'On'
      target:
        entity_id: input_select.bedroom_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
          to On!"
  - alias: '4'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - tv_is_off
      - condition: state
        entity_id: input_select.bedroom_tv_status
        state: 'On'
    then:
    - service: input_select.select_option
      data:
        option: 'Off'
      target:
        entity_id: input_select.bedroom_tv_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
          to Off!"
  - alias: '5'
    if:
    - condition: trigger
      id:
      - button1_elianRemote_singlePress
      - button1_ofirRemote_singlePress
    then:
    - service: script.toggle_bedroom_ac
      metadata: {}
      data: {}
  - alias: '6'
    if:
    - condition: trigger
      id:
      - button2_elianRemote_singlePress
      - button2_ofirRemote_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.bedroom_ac'', ''temperature'')|int(7)
          + 1 }}'
      target:
        entity_id: climate.bedroom_ac
  - alias: '7'
    if:
    - condition: trigger
      id:
      - button3_elianRemote_singlePress
      - button3_ofirRemote_singlePress
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ state_attr(''climate.bedroom_ac'', ''temperature'')|int(7)
          - 1 }}'
      target:
        entity_id: climate.bedroom_ac
  - alias: '8'
    if:
    - condition: trigger
      id:
      - button4_elianRemote_singlePress
      - button4_ofirRemote_singlePress
    then:
    - service: script.ir_turn_on_off_bedroom_tv
      data: {}
  - alias: '9'
    if:
    - condition: trigger
      id:
      - button1_ofirRemote_doublePress
      - button1_elianRemote_doublePress
    then:
    - service: light.toggle
      metadata: {}
      data: {}
      target:
        entity_id: light.bedroom
  - alias: '10'
    if:
    - condition: trigger
      id:
      - vibration
    then:
    - service: light.toggle
      metadata: {}
      data: {}
      target:
        entity_id: light.bedroom
  - alias: '11'
    if:
    - condition: trigger
      id:
      - light_to_off
      enabled: false
    then:
    - service: vacuum.send_command
      data:
        command: app_segment_clean
        params:
        - segments:
          - 20
          repeat: 2
      target:
        entity_id: vacuum.roborock_s8_pro_ultra
    - service: notify.home_assistant_group
      metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Bathroom!"
    enabled: false
  mode: single
- id: '1709561304330'
  alias: Robot Vacuum Daily Routine
  description: 'Will start to vacuum home if zone.home is empty for more than 90 minutes.

    Will run only once a day'
  trigger:
  - platform: numeric_state
    entity_id:
    - zone.home
    for:
      hours: 1
      minutes: 20
      seconds: 0
    below: 1
  condition:
  - condition: template
    value_template: '{{ (states(''sensor.roborock_s8_pro_ultra_last_clean_begin'')
      | as_datetime(as_datetime(0)) | as_local).date() != now().date() }}'
  - condition: time
    after: 08:00:00
  action:
  - service: vacuum.start
    target:
      entity_id: vacuum.roborock_s8_pro_ultra
    data: {}
  - service: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
  - service: notify.mobile_app_elians_iphone
    metadata: {}
    data:
      message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
  mode: single
- id: '1709821554566'
  alias: Robot Vacuum 3 Days Without cleaning Actionable Notification
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
  condition:
  - condition: template
    value_template: '{{ now() - states(''sensor.roborock_s8_pro_ultra_last_clean_begin'')
      | as_datetime | as_local > timedelta(days=3) }}'
  action:
  - alias: Set up variables for the actions
    variables:
      action_keep: '{{ ''OPEN_'' ~ context.id }}'
      action_stop: '{{ ''CLOSE_'' ~ context.id }}'
  - alias: Ask to stop or keep Roborock S8 Vacuum
    service: notify.mobile_app_ofir_honor_magic_5_pro
    data:
      message: The robot is running now. Do you want to stop him?
      data:
        actions:
        - action: '{{ action_keep }}'
          title: Keep Vacuum Running
        - action: '{{ action_stop }}'
          title: Stop Vacuum
  - alias: Wait for a response
    wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_keep }}'
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_stop }}'
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_stop }}'
      sequence:
      - service: vacuum.return_to_base
        target:
          entity_id: vacuum.roborock_s8_pro_ultra
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_keep }}'
      sequence:
      - service: notify.mobile_app_ofir_honor_magic_5_pro
        data:
          message: You chose to keep cleaning the house, well done!
  mode: single
- id: '1710137624869'
  alias: Fish Fed Telegram Notification
  description: ''
  trigger:
  - platform: state
    entity_id: switch.hfjh_v2_eadb_fish_tank_2
    attribute: event.4.1
  condition:
  - alias: Check if the switch didn't go from or to unavailable
    condition: template
    value_template: '{{ not ''unavailable'' in [trigger.from_state.state, trigger.to_state.state]
      }}'
  - alias: Check if the values are correct
    condition: template
    value_template: "{{ \n  values is defined and values.value is defined and values.timestamp
      is defined\n  and not (values.value == 'unknown' and values.timestamp == 'unknown')\n}}\n"
  action:
  - if:
    - condition: state
      entity_id: light.office
      state: 'off'
    then:
    - service: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.office
  - service: camera.snapshot
    data:
      filename: /config/www/tmp/snapshot_aquarium_sub.jpg
    target:
      entity_id: camera.aquarium_sub
  - service: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_aquarium_sub.jpg
      caption: "    {% if values.error %} \U0001F41F ‚ùå The fishes have not been fed
        at {{ values.timestamp }} ‚ùå {% else %} \U0001F41F The fishes have been fed
        {{ values.value }} portions at {{ values.timestamp }}. {% endif %}"
  mode: single
  variables:
    values: "{% if state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1') is not
      none %}\n  {% set value = (state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1')
      | from_json).value[0].value.split(',') %}\n  {% set timestamp = (state_attr('switch.hfjh_v2_eadb_fish_tank_2',
      'event.4.1') | from_json).timestamp %}\n{% endif %} {% set timestamp =  timestamp
      | default() | timestamp_custom('%H:%M %A', default='unknown') %} {% set value
      = (value | default())[6] | default('unknown') %} {% set error = (value | default())[5]
      | default() == 0 %} {{ dict(timestamp=timestamp,value=value,error=error) }}\n"
- id: '1710225222194'
  alias: AC's Notification
  description: '1. Living Room AC On Notification

    2. Living Room AC Off Notification

    3. Office AC On Notification

    4. Office AC Off Notification

    5. Bedroom AC On Notification

    6. Bedroom AC Off Notification

    7. Wardrobe AC On Notification

    8. Wardrobe AC Off Notification'
  trigger:
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: cool
    id: ac_set_cool
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: heat
    id: ac_set_heat
  - platform: state
    entity_id:
    - climate.ofir_a_c
    to: 'off'
    id: ac_set_to_off
    from:
  - platform: numeric_state
    entity_id:
    - sensor.office_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    above: 5
    id: office_ac_on
  - platform: numeric_state
    entity_id:
    - sensor.office_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 40
    id: office_ac_off
    below: 4
  - platform: numeric_state
    entity_id:
    - sensor.bedroom_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 20
    above: 5
    id: bedroom_ac_on
  - platform: numeric_state
    entity_id:
    - sensor.bedroom_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 47
    below: 4
    id: bedroom_ac_off
  - platform: numeric_state
    entity_id:
    - sensor.wardrobe_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    above: 5
    id: wardrobe_ac_on
  - platform: numeric_state
    entity_id:
    - sensor.wardrobe_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 40
    id: wardrobe_ac_off
    below: 4
  condition: []
  action:
  - alias: '1'
    if:
    - condition: trigger
      id:
      - ac_set_cool
      - ac_set_heat
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Living Room AC ‚ùÑÔ∏è Status has been changed
          to On!"
  - alias: '2'
    if:
    - condition: trigger
      id:
      - ac_set_to_off
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Living Room AC ‚ùÑÔ∏è Status has been changed
          to Off!"
  - alias: '3'
    if:
    - condition: trigger
      id:
      - office_ac_on
    - condition: state
      entity_id: input_select.office_ac_status
      state: 'Off'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'On'
      target:
        entity_id: input_select.office_ac_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Office AC ‚ùÑÔ∏è Status has been changed to
          On!"
  - alias: '4'
    if:
    - condition: trigger
      id:
      - office_ac_off
    - condition: state
      entity_id: input_select.office_ac_status
      state: 'On'
    then:
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'Off'
      target:
        entity_id: input_select.office_ac_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Office AC ‚ùÑÔ∏è Status has been changed to
          Off!"
  - alias: '5'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - bedroom_ac_on
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'Off'
    then:
    - service: input_select.select_option
      data:
        option: 'On'
      target:
        entity_id: input_select.bedroom_ac_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Bedroom AC ‚ùÑÔ∏è Status has been changed to
          On!"
  - alias: '6'
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - bedroom_ac_off
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'On'
    then:
    - service: input_select.select_option
      data:
        option: 'Off'
      target:
        entity_id: input_select.bedroom_ac_status
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Bedroom AC ‚ùÑÔ∏è Status has been changed to
          Off!"
  - alias: '7'
    if:
    - condition: trigger
      id:
      - wardrobe_ac_on
    - condition: state
      entity_id: input_select.wardrobe_ac_status
      state: 'Off'
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wardrobe AC ‚ùÑÔ∏è Status has been changed to
          On!"
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'On'
      target:
        entity_id: input_select.wardrobe_ac_status
  - alias: '8'
    if:
    - condition: trigger
      id:
      - wardrobe_ac_off
    - condition: state
      entity_id: input_select.wardrobe_ac_status
      state: 'On'
    then:
    - service: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wardrobe AC ‚ùÑÔ∏è Status has been changed to
          Off!"
    - service: input_select.select_option
      metadata: {}
      data:
        option: 'Off'
      target:
        entity_id: input_select.wardrobe_ac_status
  mode: single
- id: '1710393879091'
  alias: Door Open Notification to Telegram
  description: If state changed to `Open` send photo of Main Door Camera and Telegram
    Message of Door being Open.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.kitchen_l2
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: camera.snapshot
    metadata: {}
    data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
    target:
      entity_id: camera.dining_table_sub
  - service: telegram_bot.send_photo
    metadata: {}
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - \U0001F6AAMain Door is open now!"
  mode: single
- id: '1710394310075'
  alias: Door Closed Notification to Telegram
  description: If state changed to `Closed` send  Telegram Message of Door being Closed
    and turn off the light after 25 seconds.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  condition: []
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F6AA Main Door is closed now!"
  - delay:
      hours: 0
      minutes: 0
      seconds: 25
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.kitchen_l2
    data: {}
  mode: single
- id: '1710448585060'
  alias: Office - Presence Turn On Lights
  description: When Presence detected in Office, if lights off and Roborock is docked
    then turn on the lights in the room.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_presence
    to: 'on'
  condition:
  - condition: state
    entity_id: light.office
    state: 'off'
  - condition: time
    after: '13:00:00'
    before: '23:00:00'
  - condition: or
    conditions:
    - condition: state
      entity_id: vacuum.roborock_s8_pro_ultra
      state: docked
    - condition: state
      entity_id: vacuum.roborock_s8_pro_ultra
      state: unavailable
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.office
      - light.office_elian_desk_rgb_strip
      - light.office_ofir_desk_rgb_strip
  - service: remote.send_command
    metadata: {}
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      device: Corner_RGB_Lamp
      command: Power
    target:
      device_id: 213c1e28be789af24d278bfa20f54941
  - service: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - Office - Presence Turn On Lights \U0001F4A1"
  mode: single
- id: '1710659124035'
  alias: Shower - Boiler before & after Work
  description: Turn on the Boiler at 6:15 AM on Sunday, Monday, Tuesday, Wednesday,
    and Thursday for 35 minutes.
  trigger:
  - platform: time
    at: 06:15:00
    id: Morning
  - platform: time
    at: '15:07:00'
    id: AfterWork
  condition:
  - condition: time
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
  - condition: state
    entity_id: switch.boiler
    state: 'off'
  action:
  - if:
    - condition: trigger
      id:
      - AfterWork
    - condition: zone
      entity_id: person.ofir
      zone: zone.ofir_work
    then:
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ‚ô®Ô∏è Shower Water after Work has been activated!"
    - service: script.turn_on_switcher_for_60mins
      metadata: {}
      data: {}
  - if:
    - condition: trigger
      id:
      - Morning
    - condition: numeric_state
      entity_id: zone.home
      above: 0
    then:
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ‚ô®Ô∏è Hot Water before Work has been activated!"
    - service: script.turn_on_boiler_for_35_minutes
      data: {}
  mode: single
- id: '1710659808604'
  alias: Kitchen - Presence Turn On Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    from: 'off'
    to: 'on'
    id: yes_presence
  condition:
  - condition: state
    entity_id: light.kitchen_l1
    state: 'off'
  - condition: time
    after: '15:00:00'
    before: '23:59:00'
  - condition: state
    entity_id: vacuum.roborock_s8_pro_ultra
    state: docked
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.kitchen_l1
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation -  \U0001F4A1Presence in Kitchen, turned the
        light on!"
  mode: single
- id: '1710660367382'
  alias: Kitchen - No Presence Turn Off Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition:
  - condition: state
    entity_id: light.kitchen_l1
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id:
      - light.kitchen_l1
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation -  \U0001F4A1No Presence in Kitchen, turned
        the light off!"
  mode: single
- id: '1710660600443'
  alias: Living Room - No Presence Turn Off Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_presence_sensor_presence
    to: 'off'
    for:
      hours: 0
      minutes: 35
      seconds: 0
    from:
  condition:
  - condition: state
    entity_id: input_select.living_room_tv_status
    state: 'On'
  action:
  - service: script.ir_turn_on_off_living_room_tv
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F4FA No Presence on LR, Turned off TV!"
  mode: single
- id: '1710661044589'
  alias: Office Bathroom - Presence Turn On Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_bathroom_motion_sensor_occupancy
    to: 'on'
    id: motion_in_bathroom
  condition:
  - condition: state
    entity_id: light.office_bathroom
    state: 'off'
  - condition: state
    entity_id: vacuum.roborock_s8_pro_ultra
    state: docked
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.office_bathroom
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Office Bathroom Motion Light"
  mode: single
- id: '1710661192583'
  alias: Office Bathroom - No Presence Turn Off Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_bathroom_motion_sensor_occupancy
    to: 'off'
    id: no_motion_in_bathroom
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: light.office_bathroom
    state: 'on'
  action:
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.office_bathroom
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F4A1 No Presence at Office Bathroom
        - Lights off \U0001F4DD\U0001F9FB"
  mode: single
- id: '1710708901407'
  alias: Office - No Presence Turn Off Lights/TV/AC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_presence
    to: 'off'
    for:
      hours: 0
      minutes: 25
      seconds: 0
    id: presence_away_25_mins
  condition: []
  action:
  - alias: Turn Off AC
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: state
        entity_id: input_select.office_ac_status
        state: 'On'
    then:
    - service: climate.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: climate.office
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off AC!"
  - alias: Turn Off TV
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: state
        entity_id: input_select.office_tv_status
        state: 'On'
        for:
          hours: 0
          minutes: 5
          seconds: 0
    then:
    - service: script.tv_power_office
      metadata: {}
      data: {}
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off TV!"
  - alias: Turn Off Lights
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: or
        conditions:
        - condition: state
          entity_id: light.office
          state: 'on'
        - condition: state
          entity_id: light.office_elian_desk_rgb_strip
          state: 'on'
        - condition: state
          entity_id: light.office_ofir_desk_rgb_strip
          state: 'on'
        - condition: state
          entity_id: light.office_wall_light
          state: 'on'
        - condition: state
          entity_id: light.office_bathroom
          state: 'on'
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.office
        - light.office_elian_desk_rgb_strip
        - light.office_ofir_desk_rgb_strip
        - light.office_wall_light
        - light.office_bathroom
    - service: remote.send_command
      metadata: {}
      data:
        num_repeats: 1
        delay_secs: 0.4
        hold_secs: 0
        device: Corner_RGB_Lamp
        command: Power
      target:
        device_id: 213c1e28be789af24d278bfa20f54941
    - service: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office - Lights off"
  mode: single
- id: '1710709437729'
  alias: Office - Blink Red Light
  description: When Ofir is home and Main Door open or Elian enters Home area.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_sensor_contact
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - device_tracker.elians_iphone
    from: not_home
    to: home
    id: elian_home_area
    for:
      hours: 0
      minutes: 0
      seconds: 45
  condition:
  - condition: time
    after: '16:15:00'
    before: 01:30:00
  - alias: Confirm someone is Presence at Office
    condition: state
    entity_id: binary_sensor.office_presence_sensor_presence
    state: 'on'
    enabled: true
  action:
  - service: scene.create
    data:
      scene_id: thebeforetimes
      snapshot_entities:
      - light.office_elian_desk_rgb_strip
      - light.office_ofir_desk_rgb_strip
      - light.office_wall_light
  - repeat:
      count: 60
      sequence:
      - service: light.toggle
        data:
          color_name: red
        target:
          entity_id:
          - light.office_elian_desk_rgb_strip
          - light.office_ofir_desk_rgb_strip
          - light.office_wall_light
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 250
  - service: scene.turn_on
    target:
      entity_id: scene.thebeforetimes
    metadata: {}
  - service: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - Blink Red Lights Office"
  mode: single
- id: '1710843500416'
  alias: Robot Vacuum Dock Error Notifications
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: water_empty
    id: water_empty
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: waste_water_tank_full
    id: waste_water_tank_full
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: duct_blockage
    id: duct_blockage
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: dirty_tank_latch_open
    id: dirty_tank_latch_open
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: no_dustbin
    id: no_dustbin
  - platform: state
    entity_id:
    - sensor.roborock_s8_pro_ultra_dock_error
    to: cleaning_tank_full_or_blocked
    id: cleaning_tank_full_or_blocked
  condition:
  - condition: state
    entity_id: vacuum.roborock_s8_pro_ultra
    state: docked
  action:
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - Robot Dock Error"
  - if:
    - condition: trigger
      id:
      - water_empty
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum Water is Empty! ‚ö†Ô∏è"
    alias: Water is empty
  - alias: Waste Water Tank is Full
    if:
    - condition: trigger
      id:
      - waste_water_tank_full
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum Waste Water Tank is Full! ‚ö†Ô∏è"
  - alias: Duct Blockage
    if:
    - condition: trigger
      id:
      - duct_blockage
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum Duct Blockage! ‚ö†Ô∏è"
  - alias: Dirty Tank Latch is Open
    if:
    - condition: trigger
      id:
      - dirty_tank_latch_open
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum Dirty Tank Latch is Open! ‚ö†Ô∏è"
  - alias: No Dustbin
    if:
    - condition: trigger
      id:
      - no_dustbin
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum No Dustbin! ‚ö†Ô∏è"
  - alias: Cleaning Tank Full or Blocked
    if:
    - condition: trigger
      id:
      - cleaning_tank_full_or_blocked
    then:
    - service: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - Robot Vacuum Cleaning Tank Full or Blocked!
          ‚ö†Ô∏è"
  mode: single
