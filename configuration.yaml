# Loads default set of integrations. Do not remove.
default_config:

# [=========================]Xiaomi Miot[=========================]
xiaomi_miot:
  ### Ideas/suggestions taken from https://github.com/al-one/hass-xiaomi-miot/issues/326
  device_customizes:
    hfjh.fishbowl.v2:
      ### Generate number entities for pump flux, brightness and led color
      number_properties: pump_flux,ledboard_brightness,ledboard_color
      ### Generate a button entity to trigger the action to feed the fish
      button_actions: set_feed_single
      ### Add attribute to keep track of latest feed-record event
      miio_cloud_props: event.4.1
  exclude_state_attributes:
    ### Generic attributes to exclude
    - mac_address
    ### Aquarium attributes to exclude
    - function.mcu_type
    - function.mcu_type_new
    - function.key_switch
    - function.feed_time_week
    - function.feed_num
    - function.feed_time
    - function.feed_time_switch
    - function.ledboard_time_switch
    - function.ledboard_time_open
    - function.ledboard_time_close
    - function.ledboard_model
    - function.ledboard_sun
    - function.ledboard_stream
    - function.ledboard_speed
    - function.ledboard_time_switch
    - function.ledboard_time_open
    - function.ledboard_time_close

light:
  - platform: template
    lights:
      fishbowl_light:
        friendly_name: "Aquarium Light"
        ### Brightness returned by MioT is in %, while the light brightness is 0-255
        level_template: >-
          {%- if states('number.hfjh_v2_eadb_ledboard_brightness') -%}
              {{ (((states('number.hfjh_v2_eadb_ledboard_brightness')|int)*255)/100)|int }}
          {%- endif -%}
        value_template: >-
          {%- if states('number.hfjh_v2_eadb_ledboard_brightness') -%}
            {{ states('number.hfjh_v2_eadb_ledboard_brightness')|int > 0 }}
          {%- endif -%}
        availability_template: "{{ states('switch.hfjh_v2_eadb_fish_tank_2') in ['on', 'off'] and states('number.hfjh_v2_eadb_ledboard_brightness') | is_number }}"
        icon_template: "{{ 'mdi:lightbulb' }}"
        ### Brightness returned by MioT is in %, while the light brightness is 0-255
        set_level:
          service: number.set_value
          data:
            entity_id: number.hfjh_v2_eadb_ledboard_brightness
            value: "{{ (((brightness|int)/255)*100)|int }}"
        turn_on:
          service: script.turn_on_fishbowl_light
        turn_off:
          service: script.turn_off_fishbowl_light

binary_sensor:
  - platform: template
    sensors:
      feed_record_result:
        value_template: >-
          {%- if state_attr('switch.hfjh_v2_eadb_fish_tank_2','event.4.1') -%}
              {% set feed_record = state_attr('switch.hfjh_v2_eadb_fish_tank_2','event.4.1')|from_json %}
              {% set feed_result = feed_record.value[0].value.split(',')[5] %}
              {{ feed_result|int != 0 }}
          {%- endif -%}
        availability_template: "{{ states('switch.hfjh_v2_eadb_fish_tank_2') in ['on', 'off'] }}"
        attribute_templates:
          timestamp: >-
            {%- if state_attr('switch.hfjh_v2_eadb_fish_tank_2','event.4.1') -%}
                {% set feed_record = state_attr('switch.hfjh_v2_eadb_fish_tank_2','event.4.1')|from_json %}
                {{ as_datetime(feed_record.timestamp)|timestamp_local }}
            {%- endif -%}
        friendly_name: "Automatic Feeder"
        device_class: problem
  # [=========================]Phone at home[=========================]
  - platform: template
    sensors:
      any_phone_at_home:
        value_template: "{{ is_state('device_tracker.elians_iphone', 'home') or is_state('device_tracker.ofir_phone', 'home') }}"
        device_class: presence

# [=========================]Xiaomi Miot[=========================]
# [=========================]Switchbot[=========================]
rest_command:
  switchbot_device_command:
    url: "https://api.switch-bot.com/v1.0/devices/{{ deviceId }}/commands"
    method: post
    content_type: "application/json"
    headers:
      Authorization: !secret switchbot_api
    payload: '{"command": "{{ command }}"}'

switch:
  - platform: template
    switches:
      tv_office:
        friendly_name: Office TV
        turn_on:
          service: rest_command.switchbot_device_command
          data:
            deviceId: !secret switchbot_deviceId
            command: "turnOn"
        turn_off:
          service: rest_command.switchbot_device_command
          data:
            deviceId: !secret switchbot_deviceId
            command: "turnOff"
        icon_template: >-
          {% if is_state('switch.tv_office', 'off') %}
            mdi:television
          {% else %}
            mdi:television
          {% endif %}
# [=========================]Switchbot[=========================]
# [=========================]Spotcast[=========================]
spotcast:
  sp_dc: !secret primary_sp_dc
  sp_key: !secret primary_sp_key
  country: IL #optional, added in 3.6.24
  accounts:
    elian:
      sp_dc: !secret elian_sp_dc
      sp_key: !secret elian_sp_key
    ofir:
      sp_dc: !secret ofir_sp_dc
      sp_key: !secret ofir_sp_key

# [=========================]Spotcast[=========================]
logbook:
  exclude:
    entities:
      - sensor.time
# [=========================]Alexa[=========================]
alexa_media:
  accounts:
    - email: !secret amazon_user
      password: !secret amazon_password
      url: amazon.com
# [=========================]Alexa[=========================]
# [=========================]trakt.tv[=========================]
trakt_tv:
  language: en
  timezone: Europe/Paris
  sensors:
    upcoming:
      show:
        days_to_fetch: 30
        max_medias: 10
      movie:
        days_to_fetch: 45
        max_medias: 5
    recommendation:
      show:
        max_medias: 3
      movie:
        max_medias: 3
# [=========================]trakt.tv[=========================]
# [=========================]Authenticated[=========================]
logger:
  default: info
  logs:
    custom_components.authenticated: debug
# [=========================]Authenticated[=========================]
# [=========================]Themes[=========================]
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /hacsfiles/hass-hue-icons/hass-hue-icons.js
    - /local/community/custom-brand-icons/custom-brand-icons.js
# [=========================]Themes[=========================]

# [=========================]Text to speech[=========================]
tts:
  - platform: google_translate
# [=========================]Text to speech[=========================]

automation: !include automations.yaml
script: !include scripts.yaml
input_select: !include input_select.yaml
scene: !include scenes.yaml
sensor: !include sensors.yaml
group: !include groups.yaml
template: !include templates.yaml

homeassistant:
  customize: !include customize.yaml

shell_command:
  pushupdates_to_github: /bin/bash pushupdates.sh

# [=========================]Ombi[=========================]
ombi:
  host: "10.0.0.151"
  username: !secret ombi_user
  password: !secret ombi_pass
# [=========================]Ombi[=========================]
# [=========================]Home Zone[=========================]
zone:
  # This will override the default home zone
  - name: Home
    latitude: !secret latitude_home
    longitude: !secret longitude_home
    radius: 40
    icon: mdi:account-multiple
# [=========================]Home Zone[=========================]
# [=========================]Telegram[=========================]
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api
    allowed_chat_ids:
      - !secret telegramSupervisor_groupChatId
      - !secret telegram_groupChatId

notify:
  - platform: telegram
    name: Home Assistant Group
    chat_id: !secret telegram_groupChatId
  - platform: telegram
    name: Supervisor Telegram
    chat_id: !secret telegramSupervisor_groupChatId
# [=========================]Telegram[=========================]
