# Time
- platform: time_date
  display_options:
    - time
    - date
# Count Number Of Automations
- platform: template
  sensors:
    count_automations:
      friendly_name: "Count Of Automations"
      value_template: >-
        {{ states.automation | list | count }}
# Count Number Of Binary Sensors
- platform: template
  sensors:
    count_binary_sensor:
      friendly_name: "Count Of Binary Sensors"
      value_template: >-
        {{ states.binary_sensor | list | count }}
# Count Number Of Device Trackers
- platform: template
  sensors:
    count_device_trackers:
      friendly_name: "Count Of Device Trackers"
      value_template: >-
        {{ states.device_tracker | list | count }}
# Count Number Of Lights
- platform: template
  sensors:
    count_lights:
      friendly_name: "Count Of Lights"
      value_template: >-
        {{ states.light | list | count }}
# Count Number Of Scripts
- platform: template
  sensors:
    count_scripts:
      friendly_name: "Count Of Scripts"
      value_template: >-
        {{ states.script | list | count }}
# Count Number Of Sensors
- platform: template
  sensors:
    count_sensor:
      friendly_name: "Count Of Sensors"
      value_template: >-
        {{ states.sensor | list | count }}
# Count Number Of Switches
- platform: template
  sensors:
    count_switches:
      friendly_name: "Count Of Switches"
      value_template: >-
        {{ states.switch | list | count }}

- platform: history_stats
  name: Boiler On
  entity_id: input_select.switcher_boiler_status
  state: "On"
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"
# [=========================]Plex[=========================]
- platform: plex_recently_added
  name: Recently Added Movies # will create sensor.recently_added_movies
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - movie

- platform: plex_recently_added
  name: Recently Added TV # will create sensor.recently_added_tv
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - show

- platform: plex_recently_added
  name: Recently Added TV # will create sensor.recently_added
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
# [=========================]Plex[=========================]
# [=========================]qBitTorrent[=========================]
- platform: template
  sensors:
    bytes_sent:
      friendly_name: "MB Sent"
      unit_of_measurement: "MB/s"
      value_template: "{{ (states('sensor.qbittorrent_down_speed') | int / 1000) | round(1) }}"
    bytes_upload:
      friendly_name: "MB Sent"
      unit_of_measurement: "MB/s"
      value_template: "{{ (states('sensor.qbittorrent_up_speed') | int / 1000) | round(1) }}"
# [=========================]qBitTorrent[=========================]
# [=========================]Xiaomi[=========================]
- platform: template
  sensors:
    feed_record_timestamp:
      value_template: >-
        {% set feed_record = state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1') | from_json %}
        {{ as_local(as_datetime(feed_record.timestamp)) }}
      friendly_name: "Last Fish Feed"
      icon_template: "{{ 'mdi:fish' }}"
      device_class: timestamp
      availability_template: "{{ state_attr('switch.hfjh_v2_eadb_fish_tank_2', 'event.4.1') is not none }}"
    feed_is_missing_timestamp:
      value_template: >-
        {{ states('sensor.feed_record_timestamp') | as_datetime | as_local + timedelta(days=2, hours=3) }}
      friendly_name: "Feeding is required"
      icon_template: "{{ 'mdi:fish' }}"
      device_class: timestamp
      availability_template: "{{ 'sensor.feed_record_timestamp' | has_value }}"
# [=========================]Xiaomi[=========================]
